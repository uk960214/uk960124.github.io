<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Recursion on Koowoy Devs</title>
    <link>http://uk960214.github.io/tags/recursion/</link>
    <description>Recent content in Recursion on Koowoy Devs</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 21 Oct 2021 23:07:01 +0900</lastBuildDate><atom:link href="http://uk960214.github.io/tags/recursion/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>JavaScript Recursion Exercise</title>
      <link>http://uk960214.github.io/posts/til/21-10-21/</link>
      <pubDate>Thu, 21 Oct 2021 23:07:01 +0900</pubDate>
      
      <guid>http://uk960214.github.io/posts/til/21-10-21/</guid>
      <description>Flatten  Create a function that flattens all nested arrays in the given array.
 My initial instinct was to use the JavaScript function .flat() and recursion. However, a problem occurred with the base case. In order for recursion to function correctly, the base case needs to be set to determine if the recursion should stop. In my above solution, I wanted to compare the array before and after flattening it.</description>
    </item>
    
    <item>
      <title>[Sidenote/JS] Using Recursion to Get All Possible Combinations</title>
      <link>http://uk960214.github.io/posts/sidenote/sidenote_21-03-06/</link>
      <pubDate>Sat, 06 Mar 2021 21:33:37 +0900</pubDate>
      
      <guid>http://uk960214.github.io/posts/sidenote/sidenote_21-03-06/</guid>
      <description>The definition of combination in mathematics is as follows:
 In mathematics, a combination is a selection of items from a collection, such that the order of selection does not matter. (from Wikipedia)
 In order to get all the possible selections, the following formula is used:
image-source
The first part refers to all the combination that includes a certain value, and the latter part refers to all the combinations that does not include that value.</description>
    </item>
    
    <item>
      <title>Enlightenment of the Day 21.02.01</title>
      <link>http://uk960214.github.io/posts/enlightenments/enlightenment-21-02-01/</link>
      <pubDate>Mon, 01 Feb 2021 21:03:03 +0900</pubDate>
      
      <guid>http://uk960214.github.io/posts/enlightenments/enlightenment-21-02-01/</guid>
      <description>Sorting and Locking Pairs for Tideman (CS50 Problem Set 3) The Original Problem Explained (Tideman)  The Problem Encountered Although with the test sets provided with the example seemed to work just fine with the code I originally wrote, when graded, it showed that my code didn&amp;rsquo;t lock the pairs correctly (meaning it didn&amp;rsquo;t lock what it was supposed to, and locked pairs where it should have skipped).
1. Sorting Problem Instructions</description>
    </item>
    
  </channel>
</rss>
