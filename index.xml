<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Koowoy Devs</title>
    <link>http://uk960214.github.io/</link>
    <description>Recent content on Koowoy Devs</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 03 Feb 2021 22:00:55 +0900</lastBuildDate><atom:link href="http://uk960214.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[Javascript Regex] Recommending Alternative ID</title>
      <link>http://uk960214.github.io/posts/til/21-02-03/</link>
      <pubDate>Wed, 03 Feb 2021 22:00:55 +0900</pubDate>
      
      <guid>http://uk960214.github.io/posts/til/21-02-03/</guid>
      <description>Task Requrirements The Rules for the ID  Length of the ID must be 3 to 15 characters.
  Only alphanumeric(lowercase) characters and [ -] , [ _ ], [ . ] are allowed.
  [ . ] can not be used at the beginning and the end, and cannot be used consecutively.
 Seven Steps in Creating Recommended ID Step 1. Change all the uppercase letters to lowercase.</description>
    </item>
    
    <item>
      <title>Identifying the Loser from a Game of Word Chain</title>
      <link>http://uk960214.github.io/posts/til/21-02-02/</link>
      <pubDate>Tue, 02 Feb 2021 22:01:14 +0900</pubDate>
      
      <guid>http://uk960214.github.io/posts/til/21-02-02/</guid>
      <description>Rule of the Game Certain number of players present a word in turns, that begins with the letter of the last word&amp;rsquo;s ending. For instance, if the last word was apple, the current player needs to present a word that starts with e. No word can be presented twice in the same game.
Therefore the loser is a. whose word presented didn&#39;t begin with the last word&#39;s ending(let&#39;s call this following the previous word) or b.</description>
    </item>
    
    <item>
      <title>Enlightenment of the Day 21.02.01</title>
      <link>http://uk960214.github.io/posts/enlightenments/enlightenment-21-02-01/</link>
      <pubDate>Mon, 01 Feb 2021 21:03:03 +0900</pubDate>
      
      <guid>http://uk960214.github.io/posts/enlightenments/enlightenment-21-02-01/</guid>
      <description>Sorting and Locking Pairs for Tideman (CS50 Problem Set 3) The Original Problem Explained (Tideman)  The Problem Encountered Although with the test sets provided with the example seemed to work just fine with the code I originally wrote, when graded, it showed that my code didn&amp;rsquo;t lock the pairs correctly (meaning it didn&amp;rsquo;t lock what it was supposed to, and locked pairs where it should have skipped).
1. Sorting Problem Instructions</description>
    </item>
    
    <item>
      <title>Enlightenment of the Day 21.01.21</title>
      <link>http://uk960214.github.io/posts/enlightenments/enlightenment-21-01-21/</link>
      <pubDate>Thu, 21 Jan 2021 13:58:10 +0900</pubDate>
      
      <guid>http://uk960214.github.io/posts/enlightenments/enlightenment-21-01-21/</guid>
      <description>Getting Student with Highest Score Problem 3 Students are taking a multiple choice test with 5 answer options. Without actually solving the problem, they repeat the same pattern of numbers. When fed with the answer array, return the student who scored the highest.  Requirements 1. The pattern of each student is as follows: Student 1: 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2 .... Student 2: 2, 1, 2, 3, 2, 4, 2, 5, 2, 1, 2, 3 .</description>
    </item>
    
    <item>
      <title>Using C to Identify Valid Credit Card Numbers</title>
      <link>http://uk960214.github.io/posts/til/21-01-20/</link>
      <pubDate>Wed, 20 Jan 2021 01:14:10 +0900</pubDate>
      
      <guid>http://uk960214.github.io/posts/til/21-01-20/</guid>
      <description>Problem Create a program that uses Luhn&amp;rsquo;s Algorithm to identify if the input number is a valid credit card number for AMEX, MASTERCARD, and VISA. Breaking Down the Problem Basic Characteristics of Credit Card Numbers 1. The numbers have specific **digits** (AMEX: 15, MASTER: 16, VISA: 13 or 16 ) 2. The **first two digits** of the number are also specific (AMEX: 34 or 37, MASTER: 51~55, VISA: 40~49)  Luhn&amp;rsquo;s Algorithm Not only does the number have to fit the requirements above, it also needs to be validated through Luhn&amp;rsquo;s Algorithm which is as follows:</description>
    </item>
    
    <item>
      <title>Enlightenment of the Day 21.01.11</title>
      <link>http://uk960214.github.io/posts/enlightenments/enlightenment-21-01-11/</link>
      <pubDate>Mon, 11 Jan 2021 00:07:50 +0900</pubDate>
      
      <guid>http://uk960214.github.io/posts/enlightenments/enlightenment-21-01-11/</guid>
      <description>Situation Solving the following task on Programmers (Link) Task  An interger array &amp;lsquo;numbers&amp;rsquo; is given. Create a function that returns an array consisting of sums of 2 numbers of different index sorted in an ascending order.
 Resitrictions   The length of &amp;lsquo;numbers&amp;rsquo; is between 2 to 100. All of the numbers of are bewtween 0 to 100.   Input/Output example     numbers result     [2, 1, 3, 4, 1] [2, 3, 4, 5, 6, 7]   [5, 0, 2, 7] [2, 5, 7, 9, 12]     My Approach to the Solution   Initially    Logic Sort the input array in ascending order =&amp;gt; loop through the array using forEach =&amp;gt; in each iteration, map the array, adding the current value to the array =&amp;gt; add all that to a result array =&amp;gt; using Set, pick out unique values</description>
    </item>
    
    <item>
      <title>Publishing a [github.io Blog] with Hugo and Github Pages</title>
      <link>http://uk960214.github.io/posts/til/21-01-09/</link>
      <pubDate>Sat, 09 Jan 2021 23:15:15 +0900</pubDate>
      
      <guid>http://uk960214.github.io/posts/til/21-01-09/</guid>
      <description>0. Prerequisites  Github is installed (Link to Github Desktop)  1. Install Hugo [for Windows 10]   Create a new folder with the name &amp;ldquo;Hugo&amp;rdquo; on C: directory.
  Inside C:\Hugo, create another new folder with the name &amp;ldquo;bin&amp;rdquo;.
  Download the latest version of Hugo for Windows (which is in .zip format) from Hugo Releases.
  Extract the zip file into the C:\Hugo\bin, which was created in Step 2.</description>
    </item>
    
  </channel>
</rss>
