<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Problem-Solving on Koowoy Devs</title>
    <link>http://uk960214.github.io/tags/problem-solving/</link>
    <description>Recent content in Problem-Solving on Koowoy Devs</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 06 Mar 2021 22:22:39 +0900</lastBuildDate><atom:link href="http://uk960214.github.io/tags/problem-solving/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[JS/Problem Solving] Getting the highest possible number</title>
      <link>http://uk960214.github.io/posts/til/21-03-06/</link>
      <pubDate>Sat, 06 Mar 2021 22:22:39 +0900</pubDate>
      
      <guid>http://uk960214.github.io/posts/til/21-03-06/</guid>
      <description>Task Requirements A number between 0 and 1,000,000 and k that is smaller than the first number is given. When k amount of digit is removed, return the highest possible number.
My Attemps for Solution No.1) Using Combination On first thought, I wasn&amp;rsquo;t aware of how big the number could be, and came up with the idea to find all possiblities and to compare these to find the maximum value.</description>
    </item>
    
    <item>
      <title>[Sidenote/JS] Using Recursion to Get All Possible Combinations</title>
      <link>http://uk960214.github.io/posts/sidenote/sidenote_21-03-06/</link>
      <pubDate>Sat, 06 Mar 2021 21:33:37 +0900</pubDate>
      
      <guid>http://uk960214.github.io/posts/sidenote/sidenote_21-03-06/</guid>
      <description>The definition of combination in mathematics is as follows:
 In mathematics, a combination is a selection of items from a collection, such that the order of selection does not matter. (from Wikipedia)
 In order to get all the possible selections, the following formula is used:
image-source
The first part refers to all the combination that includes a certain value, and the latter part refers to all the combinations that does not include that value.</description>
    </item>
    
    <item>
      <title>Enlightenment of the Day 21.02.13</title>
      <link>http://uk960214.github.io/posts/enlightenments/enlightenment-21-02-13/</link>
      <pubDate>Mon, 15 Feb 2021 22:07:15 +0900</pubDate>
      
      <guid>http://uk960214.github.io/posts/enlightenments/enlightenment-21-02-13/</guid>
      <description>Handling Edge Cases in Image Filtering / Understanding Rounding of Floats in C 1. Handling Edge Cases in Image Filtering Problem Using C, create a program that apllies different filters on images. Each pixel is stored in a two dimensional array.
Obsctacle When filtering the image with &amp;lsquo;blur&amp;rsquo; and &amp;lsquo;border&amp;rsquo; filter, for each pixel in the image, certain values of all surrounding pixels needs to be reached. However, the number of surrounding pixels vary depending on the location of the pixel, more precisely, depending on whether the pixel is in the corner, edge or the middle.</description>
    </item>
    
    <item>
      <title>[Javascript Regex] Recommending Alternative ID</title>
      <link>http://uk960214.github.io/posts/til/21-02-03/</link>
      <pubDate>Wed, 03 Feb 2021 22:00:55 +0900</pubDate>
      
      <guid>http://uk960214.github.io/posts/til/21-02-03/</guid>
      <description>Task Requirements The Rules for the ID  Length of the ID must be 3 to 15 characters.
  Only alphanumeric(lowercase) characters and [ -] , [ _ ], [ . ] are allowed.
  [ . ] can not be used at the beginning and the end, and cannot be used consecutively.
 Seven Steps in Creating Recommended ID Step 1. Change all the uppercase letters to lowercase.</description>
    </item>
    
    <item>
      <title>Identifying the Loser from a Game of Word Chain</title>
      <link>http://uk960214.github.io/posts/til/21-02-02/</link>
      <pubDate>Tue, 02 Feb 2021 22:01:14 +0900</pubDate>
      
      <guid>http://uk960214.github.io/posts/til/21-02-02/</guid>
      <description>Rule of the Game Certain number of players present a word in turns, that begins with the letter of the last word&amp;rsquo;s ending. For instance, if the last word was apple, the current player needs to present a word that starts with e. No word can be presented twice in the same game.
Therefore the loser is a. whose word presented didn&#39;t begin with the last word&#39;s ending(let&#39;s call this following the previous word) or b.</description>
    </item>
    
    <item>
      <title>Enlightenment of the Day 21.01.21</title>
      <link>http://uk960214.github.io/posts/enlightenments/enlightenment-21-01-21/</link>
      <pubDate>Thu, 21 Jan 2021 13:58:10 +0900</pubDate>
      
      <guid>http://uk960214.github.io/posts/enlightenments/enlightenment-21-01-21/</guid>
      <description>Getting Student with Highest Score Problem 3 Students are taking a multiple choice test with 5 answer options. Without actually solving the problem, they repeat the same pattern of numbers. When fed with the answer array, return the student who scored the highest.  Requirements 1. The pattern of each student is as follows: Student 1: 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2 .... Student 2: 2, 1, 2, 3, 2, 4, 2, 5, 2, 1, 2, 3 .</description>
    </item>
    
    <item>
      <title>Using C to Identify Valid Credit Card Numbers</title>
      <link>http://uk960214.github.io/posts/til/21-01-20/</link>
      <pubDate>Wed, 20 Jan 2021 01:14:10 +0900</pubDate>
      
      <guid>http://uk960214.github.io/posts/til/21-01-20/</guid>
      <description>Problem Create a program that uses Luhn&amp;rsquo;s Algorithm to identify if the input number is a valid credit card number for AMEX, MASTERCARD, and VISA. Breaking Down the Problem Basic Characteristics of Credit Card Numbers 1. The numbers have specific **digits** (AMEX: 15, MASTER: 16, VISA: 13 or 16 ) 2. The **first two digits** of the number are also specific (AMEX: 34 or 37, MASTER: 51~55, VISA: 40~49)  Luhn&amp;rsquo;s Algorithm Not only does the number have to fit the requirements above, it also needs to be validated through Luhn&amp;rsquo;s Algorithm which is as follows:</description>
    </item>
    
    <item>
      <title>Enlightenment of the Day 21.01.11</title>
      <link>http://uk960214.github.io/posts/enlightenments/enlightenment-21-01-11/</link>
      <pubDate>Mon, 11 Jan 2021 00:07:50 +0900</pubDate>
      
      <guid>http://uk960214.github.io/posts/enlightenments/enlightenment-21-01-11/</guid>
      <description>Situation Solving the following task on Programmers (Link) Task  An interger array &amp;lsquo;numbers&amp;rsquo; is given. Create a function that returns an array consisting of sums of 2 numbers of different index sorted in an ascending order.
 Resitrictions   The length of &amp;lsquo;numbers&amp;rsquo; is between 2 to 100. All of the numbers of are bewtween 0 to 100.   Input/Output example     numbers result     [2, 1, 3, 4, 1] [2, 3, 4, 5, 6, 7]   [5, 0, 2, 7] [2, 5, 7, 9, 12]     My Approach to the Solution   Initially    Logic Sort the input array in ascending order =&amp;gt; loop through the array using forEach =&amp;gt; in each iteration, map the array, adding the current value to the array =&amp;gt; add all that to a result array =&amp;gt; using Set, pick out unique values</description>
    </item>
    
  </channel>
</rss>
