<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Javascript on Koowoy Devs</title>
    <link>http://uk960214.github.io/tags/javascript/</link>
    <description>Recent content in Javascript on Koowoy Devs</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 26 Jun 2021 22:17:41 +0900</lastBuildDate><atom:link href="http://uk960214.github.io/tags/javascript/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>TIL of the Past: 20-10-03</title>
      <link>http://uk960214.github.io/posts/til/til_of_past/20-10-03/</link>
      <pubDate>Sat, 26 Jun 2021 22:17:41 +0900</pubDate>
      
      <guid>http://uk960214.github.io/posts/til/til_of_past/20-10-03/</guid>
      <description>JavaScript - Advanced Loop Along with the for, while, do, and forEach loop, the topic in this section was the usage of for of and for in loop.
The idea is generally similar to the one of forEach loop, but the difference of &amp;lsquo;for in&amp;rsquo; loop compared to the other two was that &amp;lsquo;for in&amp;rsquo; was enumerating, while the other two were iterating. A more thorough explanation is provided by this link, to be honest, I&amp;rsquo;m still not 100% sure.</description>
    </item>
    
    <item>
      <title>Index and Search (2021 Kakao Blind Recruitment)</title>
      <link>http://uk960214.github.io/posts/til/21-06-24/</link>
      <pubDate>Thu, 24 Jun 2021 23:12:30 +0900</pubDate>
      
      <guid>http://uk960214.github.io/posts/til/21-06-24/</guid>
      <description>Task https://programmers.co.kr/learn/courses/30/lessons/72412;
My Solution referenced from:
 https://velog.io/@alvin/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%8A%A4-%EB%AC%B8%EC%A0%9C%ED%92%80%EC%9D%B4-%EC%88%9C%EC%9C%84-%EA%B2%80%EC%83%89-Javascript https://12bme.tistory.com/120  function solution(info, query) { let answer = []; // store every possible combination that every info can match to  let combinations = {}; const getCombinations = (arr, score, init) =&amp;gt; { let spec = arr.join(&amp;#39;&amp;#39;); let value = combinations[spec]; // add score to combination object  if (value) { combinations[spec].push(score); } else { combinations[spec] = [score]; } // recursive function, to loop through every possibility  for (let i = init; i &amp;lt; arr.</description>
    </item>
    
    <item>
      <title>[Javascript Regex] Recommending Alternative ID</title>
      <link>http://uk960214.github.io/posts/til/21-02-03/</link>
      <pubDate>Wed, 03 Feb 2021 22:00:55 +0900</pubDate>
      
      <guid>http://uk960214.github.io/posts/til/21-02-03/</guid>
      <description>Task Requrirements The Rules for the ID  Length of the ID must be 3 to 15 characters.
  Only alphanumeric(lowercase) characters and [ -] , [ _ ], [ . ] are allowed.
  [ . ] can not be used at the beginning and the end, and cannot be used consecutively.
 Seven Steps in Creating Recommended ID Step 1. Change all the uppercase letters to lowercase.</description>
    </item>
    
    <item>
      <title>Identifying the Loser from a Game of Word Chain</title>
      <link>http://uk960214.github.io/posts/til/21-02-02/</link>
      <pubDate>Tue, 02 Feb 2021 22:01:14 +0900</pubDate>
      
      <guid>http://uk960214.github.io/posts/til/21-02-02/</guid>
      <description>Rule of the Game Certain number of players present a word in turns, that begins with the letter of the last word&amp;rsquo;s ending. For instance, if the last word was apple, the current player needs to present a word that starts with e. No word can be presented twice in the same game.
Therefore the loser is a. whose word presented didn&#39;t begin with the last word&#39;s ending(let&#39;s call this following the previous word) or b.</description>
    </item>
    
    <item>
      <title>Enlightenment of the Day 21.01.21</title>
      <link>http://uk960214.github.io/posts/enlightenments/enlightenment-21-01-21/</link>
      <pubDate>Thu, 21 Jan 2021 13:58:10 +0900</pubDate>
      
      <guid>http://uk960214.github.io/posts/enlightenments/enlightenment-21-01-21/</guid>
      <description>Getting Student with Highest Score Problem 3 Students are taking a multiple choice test with 5 answer options. Without actually solving the problem, they repeat the same pattern of numbers. When fed with the answer array, return the student who scored the highest.  Requirements 1. The pattern of each student is as follows: Student 1: 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2 .... Student 2: 2, 1, 2, 3, 2, 4, 2, 5, 2, 1, 2, 3 .</description>
    </item>
    
    <item>
      <title>Enlightenment of the Day 21.01.11</title>
      <link>http://uk960214.github.io/posts/enlightenments/enlightenment-21-01-11/</link>
      <pubDate>Mon, 11 Jan 2021 00:07:50 +0900</pubDate>
      
      <guid>http://uk960214.github.io/posts/enlightenments/enlightenment-21-01-11/</guid>
      <description>Situation Solving the following task on Programmers (Link) Task  An interger array &amp;lsquo;numbers&amp;rsquo; is given. Create a function that returns an array consisting of sums of 2 numbers of different index sorted in an ascending order.
 Resitrictions   The length of &amp;lsquo;numbers&amp;rsquo; is between 2 to 100. All of the numbers of are bewtween 0 to 100.   Input/Output example     numbers result     [2, 1, 3, 4, 1] [2, 3, 4, 5, 6, 7]   [5, 0, 2, 7] [2, 5, 7, 9, 12]     My Approach to the Solution   Initially    Logic Sort the input array in ascending order =&amp;gt; loop through the array using forEach =&amp;gt; in each iteration, map the array, adding the current value to the array =&amp;gt; add all that to a result array =&amp;gt; using Set, pick out unique values</description>
    </item>
    
  </channel>
</rss>
