<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>C on Koowoy Devs</title>
    <link>http://uk960214.github.io/tags/c/</link>
    <description>Recent content in C on Koowoy Devs</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 01 Feb 2021 21:03:03 +0900</lastBuildDate><atom:link href="http://uk960214.github.io/tags/c/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Enlightenment 21 02 01</title>
      <link>http://uk960214.github.io/posts/enlightenments/enlightenment-21-02-01/</link>
      <pubDate>Mon, 01 Feb 2021 21:03:03 +0900</pubDate>
      
      <guid>http://uk960214.github.io/posts/enlightenments/enlightenment-21-02-01/</guid>
      <description>Sorting and Locking Pairs for Tideman (CS50 Problem Set 3) The Original Problem Explained (Tideman)  The Problem Encountered Although with the test sets provided with the example seemed to work just fine with the code I originally wrote, when graded, it showed that my code didn&amp;rsquo;t lock the pairs correctly (meaning it didn&amp;rsquo;t lock what it was supposed to, and locked pairs where it should have skipped).
1. Sorting Problem Instructions</description>
    </item>
    
    <item>
      <title>Using C to Identify Valid Credit Card Numbers</title>
      <link>http://uk960214.github.io/posts/til/21-01-20/</link>
      <pubDate>Wed, 20 Jan 2021 01:14:10 +0900</pubDate>
      
      <guid>http://uk960214.github.io/posts/til/21-01-20/</guid>
      <description>Problem Create a program that uses Luhn&amp;rsquo;s Algorithm to identify if the input number is a valid credit card number for AMEX, MASTERCARD, and VISA. Breaking Down the Problem Basic Characteristics of Credit Card Numbers 1. The numbers have specific **digits** (AMEX: 15, MASTER: 16, VISA: 13 or 16 ) 2. The **first two digits** of the number are also specific (AMEX: 34 or 37, MASTER: 51~55, VISA: 40~49)  Luhn&amp;rsquo;s Algorithm Not only does the number have to fit the requirements above, it also needs to be validated through Luhn&amp;rsquo;s Algorithm which is as follows:</description>
    </item>
    
  </channel>
</rss>
