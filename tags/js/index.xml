<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>JS on Koowoy Devs</title>
    <link>http://uk960214.github.io/tags/js/</link>
    <description>Recent content in JS on Koowoy Devs</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 27 Jun 2021 16:07:15 +0900</lastBuildDate><atom:link href="http://uk960214.github.io/tags/js/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[JS/Problem Solving] Get Target Number</title>
      <link>http://uk960214.github.io/posts/til/21-06-27/</link>
      <pubDate>Sun, 27 Jun 2021 16:07:15 +0900</pubDate>
      
      <guid>http://uk960214.github.io/posts/til/21-06-27/</guid>
      <description>Task https://programmers.co.kr/learn/courses/30/lessons/43165
Count how many combinations of adding and subtracting each element of the given array results the given target number.
Solution function solution(numbers, target) { let answer = 0; let nums = [...numbers]; const tar = target; // Recursive function  const getTarget = (arr, num, count) =&amp;gt; { // Get sum at every loop  let sum = arr.reduce((a, c) =&amp;gt; a + c, 0); // If sum matches target, increase answer  if(sum === num) { answer++; } // For every item in array, change to negative value, recursion  for (let i = count; i &amp;lt; arr.</description>
    </item>
    
    <item>
      <title>[JS/Problem Solving] Getting the highest possible number</title>
      <link>http://uk960214.github.io/posts/til/21-03-06/</link>
      <pubDate>Sat, 06 Mar 2021 22:22:39 +0900</pubDate>
      
      <guid>http://uk960214.github.io/posts/til/21-03-06/</guid>
      <description>Task Requirements A number between 0 and 1,000,000 and k that is smaller than the first number is given. When k amount of digit is removed, return the highest possible number.
My Attemps for Solution No.1) Using Combination On first thought, I wasn&amp;rsquo;t aware of how big the number could be, and came up with the idea to find all possiblities and to compare these to find the maximum value.</description>
    </item>
    
    <item>
      <title>[Sidenote/JS] Using Recursion to Get All Possible Combinations</title>
      <link>http://uk960214.github.io/posts/sidenote/sidenote_21.03.06/</link>
      <pubDate>Sat, 06 Mar 2021 21:33:37 +0900</pubDate>
      
      <guid>http://uk960214.github.io/posts/sidenote/sidenote_21.03.06/</guid>
      <description>The definition of combination in mathematics is as follows:
 In mathematics, a combination is a selection of items from a collection, such that the order of selection does not matter. (from Wikipedia)
 In order to get all the possible selections, the following formula is used:
image-source
The first part refers to all the combination that includes a certain value, and the latter part refers to all the combinations that does not include that value.</description>
    </item>
    
  </channel>
</rss>
