<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Sidenote on Koowoy Devs</title>
    <link>http://uk960214.github.io/categories/sidenote/</link>
    <description>Recent content in Sidenote on Koowoy Devs</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 28 Jun 2021 22:57:42 +0900</lastBuildDate><atom:link href="http://uk960214.github.io/categories/sidenote/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[Sidenote/JS] Using Stack for Maximum Efficiency</title>
      <link>http://uk960214.github.io/posts/sidenote/sidenote_21-06-28/</link>
      <pubDate>Mon, 28 Jun 2021 22:57:42 +0900</pubDate>
      
      <guid>http://uk960214.github.io/posts/sidenote/sidenote_21-06-28/</guid>
      <description>Solution Reference:
https://programmers.co.kr/questions/17409
Task https://programmers.co.kr/learn/courses/30/lessons/12973
Given a string of characters, if two of the same alphabet in a row is to be deleted until there is none left, check if this possible with the given string.
Solution function solution(s) { // Split string into array  let arr = s.split(&amp;#39;&amp;#39;); // Set temporary stack array  let temp = []; // If string length is odd number, return 0  if (arr.</description>
    </item>
    
    <item>
      <title>Sidenote_21.06.24</title>
      <link>http://uk960214.github.io/posts/sidenote/sidenote_21-06-24/</link>
      <pubDate>Fri, 25 Jun 2021 23:22:12 +0900</pubDate>
      
      <guid>http://uk960214.github.io/posts/sidenote/sidenote_21-06-24/</guid>
      <description>references:
File
sprintf
Task and Solution Code From a damaged (or deleted) card data, recover original jpeg images. [details]
My Solution #include &amp;lt;stdio.h&amp;gt;#include &amp;lt;stdlib.h&amp;gt;#include &amp;lt;stdint.h&amp;gt; typedef uint8_t BYTE; int main(int argc, char *argv[]) { // Check if parameter validity  if (argc != 2) { printf(&amp;#34;Usage: ./recover image\n&amp;#34;); return 1; } // Open input file  char *infile = argv[1]; FILE *inptr = fopen(infile, &amp;#34;r&amp;#34;); if (inptr == NULL) { fprintf(stderr, &amp;#34;Could not open %s.</description>
    </item>
    
    <item>
      <title>[Sidenote/JS] Using Recursion to Get All Possible Combinations</title>
      <link>http://uk960214.github.io/posts/sidenote/sidenote_21-03-06/</link>
      <pubDate>Sat, 06 Mar 2021 21:33:37 +0900</pubDate>
      
      <guid>http://uk960214.github.io/posts/sidenote/sidenote_21-03-06/</guid>
      <description>The definition of combination in mathematics is as follows:
 In mathematics, a combination is a selection of items from a collection, such that the order of selection does not matter. (from Wikipedia)
 In order to get all the possible selections, the following formula is used:
image-source
The first part refers to all the combination that includes a certain value, and the latter part refers to all the combinations that does not include that value.</description>
    </item>
    
  </channel>
</rss>
