<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Enlightenment on Koowoy Devs</title>
    <link>http://uk960214.github.io/categories/enlightenment/</link>
    <description>Recent content in Enlightenment on Koowoy Devs</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 15 Feb 2021 22:07:15 +0900</lastBuildDate><atom:link href="http://uk960214.github.io/categories/enlightenment/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Enlightenment of the Day 21.02.13</title>
      <link>http://uk960214.github.io/posts/enlightenments/enlightenment-21-02-13/</link>
      <pubDate>Mon, 15 Feb 2021 22:07:15 +0900</pubDate>
      
      <guid>http://uk960214.github.io/posts/enlightenments/enlightenment-21-02-13/</guid>
      <description>Handling Edge Cases in Image Filtering / Understanding Rounding of Floats in C 1. Handling Edge Cases in Image Filtering Problem Using C, create a program that apllies different filters on images. Each pixel is stored in a two dimensional array.
Obsctacle When filtering the image with &amp;lsquo;blur&amp;rsquo; and &amp;lsquo;border&amp;rsquo; filter, for each pixel in the image, certain values of all surrounding pixels needs to be reached. However, the number of surrounding pixels vary depending on the location of the pixel, more precisely, depending on whether the pixel is in the corner, edge or the middle.</description>
    </item>
    
    <item>
      <title>Enlightenment of the Day 21.02.01</title>
      <link>http://uk960214.github.io/posts/enlightenments/enlightenment-21-02-01/</link>
      <pubDate>Mon, 01 Feb 2021 21:03:03 +0900</pubDate>
      
      <guid>http://uk960214.github.io/posts/enlightenments/enlightenment-21-02-01/</guid>
      <description>Sorting and Locking Pairs for Tideman (CS50 Problem Set 3) The Original Problem Explained (Tideman)  The Problem Encountered Although with the test sets provided with the example seemed to work just fine with the code I originally wrote, when graded, it showed that my code didn&amp;rsquo;t lock the pairs correctly (meaning it didn&amp;rsquo;t lock what it was supposed to, and locked pairs where it should have skipped).
1. Sorting Problem Instructions</description>
    </item>
    
    <item>
      <title>Enlightenment of the Day 21.01.21</title>
      <link>http://uk960214.github.io/posts/enlightenments/enlightenment-21-01-21/</link>
      <pubDate>Thu, 21 Jan 2021 13:58:10 +0900</pubDate>
      
      <guid>http://uk960214.github.io/posts/enlightenments/enlightenment-21-01-21/</guid>
      <description>Getting Student with Highest Score Problem 3 Students are taking a multiple choice test with 5 answer options. Without actually solving the problem, they repeat the same pattern of numbers. When fed with the answer array, return the student who scored the highest.  Requirements 1. The pattern of each student is as follows: Student 1: 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 1, 2 .... Student 2: 2, 1, 2, 3, 2, 4, 2, 5, 2, 1, 2, 3 .</description>
    </item>
    
    <item>
      <title>Enlightenment of the Day 21.01.11</title>
      <link>http://uk960214.github.io/posts/enlightenments/enlightenment-21-01-11/</link>
      <pubDate>Mon, 11 Jan 2021 00:07:50 +0900</pubDate>
      
      <guid>http://uk960214.github.io/posts/enlightenments/enlightenment-21-01-11/</guid>
      <description>Situation Solving the following task on Programmers (Link) Task  An interger array &amp;lsquo;numbers&amp;rsquo; is given. Create a function that returns an array consisting of sums of 2 numbers of different index sorted in an ascending order.
 Resitrictions   The length of &amp;lsquo;numbers&amp;rsquo; is between 2 to 100. All of the numbers of are bewtween 0 to 100.   Input/Output example     numbers result     [2, 1, 3, 4, 1] [2, 3, 4, 5, 6, 7]   [5, 0, 2, 7] [2, 5, 7, 9, 12]     My Approach to the Solution   Initially    Logic Sort the input array in ascending order =&amp;gt; loop through the array using forEach =&amp;gt; in each iteration, map the array, adding the current value to the array =&amp;gt; add all that to a result array =&amp;gt; using Set, pick out unique values</description>
    </item>
    
  </channel>
</rss>
